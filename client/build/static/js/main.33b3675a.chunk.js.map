{"version":3,"sources":["components/FoodForm/FoodForm.jsx","components/Spinner/Spinner.jsx","components/Error/Error.jsx","components/FoodList/FoodList.jsx","App.js","index.js"],"names":["FoodForm","state","funcs","className","onSubmit","addToList","type","placeholder","onChange","saveFood","value","foodName","required","saveDays","days","Button","variant","color","Spinner","Error","FoodList","foodListUi","foodList","map","val","key","Paper","elevation","daysSinceIAte","e","updateFoodName","_id","Input","saveNewFoodName","currentInput","newFoodName","onClick","deleteFood","content","loading","error","App","useState","setFoodName","setDays","setFoodList","setNewFoodName","setCurrentInput","setLoading","setError","target","index","preventDefault","Axios","post","id","put","delete","useEffect","get","then","response","data","catch","err","console","onError","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.33b3675a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport './FoodForm.scss'\r\n\r\nconst FoodForm = ({ state, funcs }) => {\r\n    return (\r\n        <>\r\n            <div className=\"title-box\">\r\n                <h1>CRUD App with MERN</h1> \r\n            </div>\r\n            <form onSubmit={ funcs.addToList }>\r\n                <div>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Food\" \r\n                    className=\"form-control\" \r\n                    onChange={ funcs.saveFood }\r\n                    value = { state.foodName }\r\n                    required\r\n                />\r\n                <input \r\n                    type=\"number\" \r\n                    placeholder=\"Days after You ate it\" \r\n                    className=\"form-control\" \r\n                    onChange={ funcs.saveDays }\r\n                    value = { state.days }\r\n                    required\r\n                />\r\n                <Button \r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                >\r\n                    Submit\r\n                </Button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FoodForm","import React from 'react'\r\n\r\nimport './Spinner.scss'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"Spinner\">\r\n            <div className=\"loadingio-spinner-wedges-tihdmnu4it\">\r\n                <div className=\"ldio-8hyzgojyukk\">\r\n                    <div>\r\n                        <div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div>\r\n                            <div></div>\r\n                        </div>\r\n                        <div>\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nimport './Error.scss'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"Error\">\r\n            <span>Error 404!</span>\r\n            <span>Reload the Page</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React from 'react'\r\n\r\nimport { Button, Input, Paper } from '@material-ui/core'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport Error from '../Error/Error'\r\n\r\nimport './FoodList.scss'\r\n\r\nconst FoodList = ({ state, funcs }) => {\r\n  const foodListUi = state.foodList.map((val, key) => {\r\n    return (\r\n      <li key={ key }>\r\n        <Paper elevation={ 3 }>\r\n          <div>Food: { val.foodName }</div>\r\n          <div>Days Since I Ate: { val.daysSinceIAte }</div>\r\n          <form onSubmit={ e => funcs.updateFoodName(e, val._id) }>\r\n            <Input \r\n              placeholder=\"Update Food\" \r\n              onChange={ e => funcs.saveNewFoodName(e, key) }\r\n              value={ key === state.currentInput ? state.newFoodName : '' }\r\n              required\r\n            />\r\n          </form>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\"\r\n            onClick={ () => funcs.deleteFood(val._id) }\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Paper>\r\n      </li> \r\n    )\r\n  })\r\n\r\n  const \r\n    content = !(state.loading && state.error) ? <ul>{ foodListUi }</ul> : null,\r\n    loading = state.loading ? <Spinner /> : null,\r\n    error = state.error ? <Error /> : null\r\n\r\n  return (\r\n    <>\r\n      <div className=\"title-box\">\r\n        <h2>Food List</h2>\r\n      </div>\r\n      { content }\r\n      { loading }\r\n      { error }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FoodList","import React, { useState, useEffect } from 'react'\r\n\r\nimport FoodForm from './components/FoodForm/FoodForm'\r\nimport FoodList from './components/FoodList/FoodList'\r\nimport Axios from 'axios'\r\n\r\nimport './App.scss'\r\n\r\nconst App = () => {\r\n  const \r\n    [ foodName, setFoodName ] = useState(''),\r\n    [ days, setDays ] = useState(''),\r\n    [ foodList, setFoodList ] = useState([]),\r\n    [ newFoodName, setNewFoodName ] = useState(''),\r\n    [ currentInput, setCurrentInput ] = useState(''),\r\n    [ loading, setLoading ] = useState(true),\r\n    [ error, setError ] = useState(false)\r\n\r\n  const state = { \r\n    foodName, days, \r\n    foodList, newFoodName, \r\n    currentInput, loading, error \r\n  }\r\n\r\n  const funcs = {\r\n    saveFood: e => setFoodName(e.target.value),\r\n\r\n    saveDays: e => setDays(e.target.value),\r\n\r\n    saveNewFoodName: (e, index) => {\r\n      setNewFoodName(e.target.value)\r\n      setCurrentInput(index)\r\n    },\r\n\r\n    addToList: e => {\r\n      if (!foodName || !days) return\r\n\r\n      e.preventDefault()\r\n  \r\n      Axios.post(`/insert`, { foodName, days })\r\n  \r\n      setFoodName('')\r\n      setDays('')\r\n    },\r\n\r\n    updateFoodName: (e, id) => {\r\n      if (!newFoodName) return\r\n\r\n      e.preventDefault()\r\n  \r\n      Axios.put(`/update`, { id, newFoodName })\r\n      \r\n      setNewFoodName('')\r\n    },\r\n\r\n    deleteFood: id => Axios.delete(`/delete/${id}`)\r\n  }\r\n\r\n  const dataReceived = data => {\r\n    setLoading(false)\r\n    setFoodList(data)\r\n  }\r\n\r\n  const onError = err => {\r\n    console.error(err)\r\n\r\n    setError(true)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(`/read`)\r\n      .then(response => dataReceived(response.data))\r\n      .catch(err => onError(err))\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <FoodForm \r\n        state={ state }\r\n        funcs={ funcs }\r\n      />\r\n      <FoodList \r\n        state={ state }\r\n        funcs={ funcs }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}